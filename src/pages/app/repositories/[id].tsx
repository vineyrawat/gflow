import AppLayout from "@/components/app/AppLayout";
import { DarkButton } from "@/components/global/Buttons";
import LoadingSpinner from "@/components/global/LoadingSpinner";
import { useWorkflows } from "@/services/customHooks";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import React, { useEffect } from "react";
export default function RepositoryDetails() {
  const { status }: any = useSession();

  const router = useRouter();

  if (status === "unauthenticated") {
    router.replace("/");
  }

  return status !== "authenticated" ? (
    <>Loading...</>
  ) : (
    <>
      <Head>
        <title>Repositories</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout
        component={<Details id={(router.query.id ?? "").toString()} />}
      />
    </>
  );
}

function Details({ id }: { id: string }) {
  const { loading, workflows, fetchData, error } = useWorkflows(id);

  if (loading) {
    return (
      <div className="flex justify-center items-center h-40 ">
        <LoadingSpinner />
      </div>
    );
  }
  if (error) {
    return (
      <div className="flex justify-center gap-2 flex-col items-center h-40 ">
        <h1>Unable to fetch data</h1>
        <p>{error!.message ?? ""}</p>
        <DarkButton onClick={fetchData}>Retry</DarkButton>
      </div>
    );
  }

  if (workflows.length === 0) {
    return (
      <div className="flex justify-center items-center h-40 ">
        <h1>No workflows found</h1>
        <DarkButton onClick={fetchData}>Retry</DarkButton>
      </div>
    );
  }

  return (
    <div className="flex flex-col gap-4">
      {workflows.map((workflow) => {
        return (
          <div
            key={workflow.id}
            className="flex-col gap-1  outline outline-1 outline-gray-200 flex px-5 py-3 text-gray-700 border border-gray-200 rounded-lg bg-gray-50"
          >
            <div className="flex items-center gap-2">
              <h1 className="text-xl font-semibold">{workflow.name}</h1>
              <span className="bg-blue-100 text-blue-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded">
                {workflow.state ?? ""}
              </span>
            </div>
            <Image
              src={workflow.badge_url}
              alt="Badge"
              width={150}
              height={150}
            />
          </div>
        );
      })}
    </div>
  );
}
